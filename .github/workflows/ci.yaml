# See: https://docs.github.com/en/actions/writing-workflows
---
name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
    
jobs:
  check-formatting:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.80.0
          components: rustfmt
      - name: Check formatting
        run: cargo +1.80.0 fmt --all -- --check 2>/dev/null
  check-targets:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Linux
            target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - name: macOS
            target: x86_64-apple-darwin
            os: macos-latest
          - name: Windows
            target: x86_64-pc-windows-gnu
            os: windows-latest
    name: Check ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    needs:
      - check-formatting
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.80.0
          components: rustfmt
          targets: ${{ matrix.target }}
      - name: Check binaries
        id: check-bins
        continue-on-error: true
        run: cargo +1.80.0 check --target ${{ matrix.target }} --workspace --bins
      - name: Check tests
        id: check-tests
        continue-on-error: true
        run: cargo +1.80.0 check --target ${{ matrix.target }} --workspace --tests
      - name: Check examples
        id: check-examples
        continue-on-error: true
        run: cargo +1.80.0 check --target ${{ matrix.target }} --workspace --examples
      - name: Run tests
        id: run-tests
        if: ${{ steps.check-tests.outcome == 'success' }}
        run: cargo +1.80.0 test --target ${{ matrix.target }} --workspace --no-fail-fast
      - name: Obtain job id
        id: obtain-job-id
        if: ${{ always() }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          jobs=$(gh api repos/${{ github.repository }}/actions/runs/${{ github.run_id}}/attempts/${{ github.run_attempt }}/jobs)
          job_id=$(echo $jobs | jq -r '.jobs[] | select(.name | contains("${{ matrix.name }}")) | .id')
          echo "job_id is $job_id"
          echo "result=$job_id" >> $GITHUB_OUTPUT
  review-pr:
    name: Review PR
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs:
      - check-formatting
      - check-targets
    permissions:
      pull-requests: write
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            if (${{ needs.check-formatting.result == 'success' }}) {
              await github.rest.pulls.createReview({
                ...context.repo,
                pull_number: context.issue.number,
                event: 'APPROVE',
              });
            } else {
              await github.rest.pulls.createReview({
                ...context.repo,
                pull_number: context.issue.number,
                event: 'REQUEST_CHANGES',
                body: 'TBD',
              });
            }
